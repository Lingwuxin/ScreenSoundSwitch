<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>