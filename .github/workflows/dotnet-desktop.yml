name: Build and Release .NET Core Desktop App

# 触发条件：推送到 master 分支或发布标签
on:
  push:
    branches:
      - master
  release:
    types:
      - created

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        id: publish
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=false
          # 获取发布目录
          echo "publish_dir=$(pwd)/bin/Release/net8.0-windows10.0.17763.0/win-x64/publish" >> $GITHUB_ENV

      # 列出发布目录，调试发布路径是否正确
      - name: List publish directory
        run: dir ${{ env.publish_dir }}

      # 压缩发布文件
      - name: Compress Release Asset
        run: |
          $zipFile = "${{ github.workspace }}\ScreenSoundSwitch.zip"
          Compress-Archive -Path "${{ env.publish_dir }}\*" -DestinationPath $zipFile
          echo "zip_file=$zipFile" >> $GITHUB_ENV

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.zip_file }}
          asset_name: ScreenSoundSwitch.zip
          asset_content_type: application/zip
