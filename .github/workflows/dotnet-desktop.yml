name: Build and Release .NET Core Desktop App

on:
  push:
    branches:
      - master
  release:
    types:
      - created

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        run: |
          dotnet publish ScreenSoundSwitch/ScreenSoundSwitch.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true
          echo "publish_dir=$(pwd)/ScreenSoundSwitch/bin/Release/net8.0-windows/win-x64/publish" >> $GITHUB_ENV

      - name: List files in publish directory
        run: |
          Get-ChildItem -Recurse -Path "$(pwd)/ScreenSoundSwitch/bin/Release"

      - name: Check publish directory
        run: |       
          $publishDir = "$(pwd)/ScreenSoundSwitch/bin/Release/net8.0-windows*/win-x64/publish"
          $env:PUBLISH_DIR = $publishDir
          if (Test-Path $publishDir) {
            Write-Host "Publish directory exists: $publishDir"
          } else {
            Write-Host "Publish directory does not exist!"
            exit 1
          }

      - name: Compress published files
        run: |
          echo "zip_file=$zip_file" >> $GITHUB_ENV
          Compress-Archive -Path "$(pwd)/ScreenSoundSwitch/bin/Release/net8.0-windows*/*" -DestinationPath ./ScreenSoundSwitch.zip 

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: v1.0.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ScreenSoundSwitch.zip
          asset_name: ScreenSoundSwitch.zip
          asset_content_type: application/zip
